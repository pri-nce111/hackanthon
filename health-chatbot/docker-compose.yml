version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: health-chatbot-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: health-chatbot
    volumes:
      - mongodb_data:/data/db
      - ./mongodb-init.js:/docker-entrypoint-initdb.d/mongodb-init.js:ro
    networks:
      - health-chatbot-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: health-chatbot-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      PORT: 3001
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/health-chatbot?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-production
      CORS_ORIGIN: http://localhost:5173
      # Add your API keys here
      TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
      TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
      TWILIO_PHONE_NUMBER: ${TWILIO_PHONE_NUMBER}
    volumes:
      - ./backend/logs:/app/logs
      - ./backend/whatsapp-session:/app/whatsapp-session
    depends_on:
      - mongodb
    networks:
      - health-chatbot-network

  # Frontend (for production)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: health-chatbot-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - health-chatbot-network

  # Redis (for caching and session management)
  redis:
    image: redis:7-alpine
    container_name: health-chatbot-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - health-chatbot-network

volumes:
  mongodb_data:
  redis_data:

networks:
  health-chatbot-network:
    driver: bridge